package com.fbdblog.dao;

import com.fbdblog.dao.hibernate.BasePersistentClass;
import com.fbdblog.dao.hibernate.RegerEntity;
import com.fbdblog.dao.hibernate.HibernateUtil;
import com.fbdblog.util.GeneralException;
import com.fbdblog.dao.hibernate.AuthControlled;
import org.apache.log4j.Logger;

import java.util.Set;
import java.util.HashSet;

/**
 * Blogger generated by hbm2java
 */

public class Question extends BasePersistentClass implements java.io.Serializable, RegerEntity, AuthControlled {


    // Fields
     private int questionid;
     private int appid;
     private String question;
     private int componenttype;
     private boolean isrequired;
     private Set<Questionconfig> questionconfigs = new HashSet<Questionconfig>();

    //Validator
    public void validateRegerEntity() throws GeneralException {

    }

    //Loader
    public void load(){

    }

    public static Question get(int id) {
        Logger logger = Logger.getLogger("com.fbdblog.dao.Question");
        try {
            logger.debug("Question.get(" + id + ") called.");
            Question obj = (Question) HibernateUtil.getSession().get(Question.class, id);
            if (obj == null) {
                logger.debug("Question.get(" + id + ") returning new instance because hibernate returned null.");
                return new Question();
            }
            return obj;
        } catch (Exception ex) {
            logger.error("com.fbdblog.dao.Question", ex);
            return new Question();
        }
    }

    // Constructors

    /** default constructor */
    public Question() {
    }


    public boolean canRead(User user){
        return true;
    }

    public boolean canEdit(User user){
        return canRead(user);
    }



    // Property accessors

    public int getQuestionid() {
        return questionid;
    }

    public void setQuestionid(int questionid) {
        this.questionid = questionid;
    }


    public int getAppid() {
        return appid;
    }

    public void setAppid(int appid) {
        this.appid = appid;
    }

    public String getQuestion() {
        return question;
    }

    public void setQuestion(String question) {
        this.question = question;
    }

    public int getComponenttype() {
        return componenttype;
    }

    public void setComponenttype(int componenttype) {
        this.componenttype = componenttype;
    }

    public boolean getIsrequired() {
        return isrequired;
    }

    public void setIsrequired(boolean isrequired) {
        this.isrequired = isrequired;
    }

    public Set<Questionconfig> getQuestionconfigs() {
        return questionconfigs;
    }

    public void setQuestionconfigs(Set<Questionconfig> questionconfigs) {
        this.questionconfigs = questionconfigs;
    }

 
}
